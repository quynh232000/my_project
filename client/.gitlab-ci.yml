variables:
    IMAGE_TAG: $CI_PROJECT_NAMESPACE-$CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA
    IMAGE_TAG_LATEST: $CI_PROJECT_NAMESPACE-$CI_PROJECT_NAME-latest
    ENV_PATH: /home/gitlab-runner/ENV/$CI_COMMIT_BRANCH/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/.env

stages:
    - build-dev
    - push-dev
    - build-production
    - push-production

before_script:
    - export IMAGE_TAG=$(echo ${IMAGE_TAG} | tr '/' '-')
    - export IMAGE_TAG_LATEST=$(echo ${IMAGE_TAG_LATEST} | tr '/' '-')

.build_template: &build_template
    script:
        # Export timestamp variables for image tag
        - |
            echo "BUILD_TS=$(date +%s)" >> build.env
            source build.env
            echo "Using timestamp: $BUILD_TS"

        # Copy env file to build context
        - cp $ENV_PATH .

        # Build image
        - docker build -f Dockerfile -t
          $HARBOR_REGISTRY/$CI_PROJECT_ROOT_NAMESPACE/$CI_COMMIT_BRANCH:$IMAGE_TAG-$BUILD_TS
          .
    artifacts:
        reports:
            # Save build.env as CICD variable
            dotenv: build.env

.push_template: &push_template
    script:
        # Login to dockerhub before push
        - set +o history
        - docker login $HARBOR_REGISTRY -u $HARBOR_USER -p $HARBOR_PWD
        - set -o history

        - docker push
          $HARBOR_REGISTRY/$CI_PROJECT_ROOT_NAMESPACE/$CI_COMMIT_BRANCH:$IMAGE_TAG-$BUILD_TS

        # Untag & detete created images
        - docker image rm
          $HARBOR_REGISTRY/$CI_PROJECT_ROOT_NAMESPACE/$CI_COMMIT_BRANCH:$IMAGE_TAG-$BUILD_TS

build-dev:
    stage: build-dev
    <<: *build_template
    tags:
        - dev
        - build
        - booking
    only:
        - dev

push-dev:
    stage: push-dev
    <<: *push_template
    needs:
        - job: build-dev
          artifacts: true
    tags:
        - dev
        - build
        - booking
    only:
        - dev
