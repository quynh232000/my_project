name: CI - My_project

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-deploy-local:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: .

    env:
      APP_ENV: local
      APP_DEBUG: true
      APP_KEY: ${{ secrets.APP_KEY }}
      COMPOSE_DOCKER_CLI_BUILD: 1
      DOCKER_BUILDKIT: 1

    steps:
      # 🧾 1. Checkout source code
      - name: Checkout repository
        uses: actions/checkout@v4

      # 🐳 2. Verify Docker installed
      - name: Verify Docker installation
        run: |
          docker --version
          docker compose version

      # ⚙️ 3. Stop and clean old containers
      - name: Clean old containers
        run: |
          echo "🧹 Cleaning old containers..."
          docker compose down -v || true

      # 🧱 4. Build Docker containers
      - name: Build Laravel server
        run: |
          echo "🏗️ Building Laravel Docker image..."
          docker compose build server

      # 🚀 5. Start server container (background)
      - name: Start Laravel server
        run: |
          echo "🚀 Starting Laravel server..."
          docker compose up -d server
          docker compose ps

      # 🕐 6. Wait for Laravel to boot
      - name: Wait for Laravel server
        run: |
          echo "⏳ Waiting for Laravel to be ready..."
          sleep 10
          docker compose logs server

      # 🧪 7. Run Laravel tests inside container
      - name: Run Laravel tests
        run: |
          echo "🧪 Running Laravel tests..."
          docker compose exec -T server composer install
          docker compose exec -T server cp .env.example .env
          docker compose exec -T server php artisan key:generate
          docker compose exec -T server php artisan migrate --force
          docker compose exec -T server php artisan test

      # 🌍 8. Show local server info
      - name: Show local server
        run: |
          echo "🌍 Laravel running at: http://localhost:8000"
          docker compose ps

      # 🧹 9. (Optional) Cleanup after test
      - name: Stop containers (optional)
        if: always()
        run: |
          echo "🧹 Stopping Docker containers..."
          docker compose down -v
